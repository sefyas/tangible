<launch>
   <!-- Kinect -->
   <arg name="camera" default="camera" />

   <include file="$(find freenect_launch)/launch/freenect.launch" >
      <arg name="camera" value="$(arg camera)" />
      <arg name="depth_registration" value="true" />
      <arg name="publish_tf" value="false" /> 
   </include>

   <!-- TF Frames -->
   <arg name="tf_prefix" value="" />
   <arg name="pi/2" value="1.5707963267948966" />
   <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />

   <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_world_link"
         args="0 0 0 0 0 0 base_link base_footprint 100" />
   <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_world_link"
         args="0 0 1.35 0 0.385 0 base_footprint $(arg tf_prefix)/$(arg camera)_link 100" />
   <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link"
         args="0 -0.02  0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_depth_frame 100" />
   <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link1"
         args="0 -0.045 0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_rgb_frame 100" />
   <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link2"
         args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_depth_frame $(arg tf_prefix)/$(arg camera)_depth_optical_frame  100" />
   <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link3"
         args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_rgb_frame $(arg tf_prefix)/$(arg camera)_rgb_optical_frame 100" />

    <!-- AR Tracking -->
    <include file="$(find ar_track_alvar)/launch/kinect_indiv.launch" >
       <arg name="output_option" value="log" />
    </include>

    <!-- RViz -->
	<node pkg="rviz" type="rviz" name="visualization" />

</launch>